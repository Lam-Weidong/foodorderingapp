version: "3.3"
services:
  api-gateway: 
    build: ./api_gateway
    image: orderapi/api_gateway
    container_name: api_gateway
    networks:
      - net
    volumes:
      - ./api_gateway/app.py:/app/app.py
    ports:
      - 20000:15000
    environment:
        MONGO_USERNAME: comp3122
        MONGO_PASSWORD: 12345
        MONGO_SERVER_HOST: mongo
        MONGO_SERVER_PORT: 27017
    depends_on:
      -  mongo

  mongo: #original mongo hostname/username/password
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: comp3122
      MONGO_INITDB_ROOT_PASSWORD: 12345
      MONGO_INITDB_DATABASE: admin
    networks:
      - net
    ports:
      - 27017:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
# networks:
#   default:
#     name: orderapi
# volumes:
#   mongo_volume:
#     name: mongo_vol

  # prometheus:
  #   image: prom/prometheus:v2.26.0
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"

  grafana:
    image: grafana/grafana:7.5.10
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks: 
      - net
    ports: 
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana

  prometheus:
    image: prom/prometheus:v2.26.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - net
    ports:
      - "9090:9090"
    links:
      - mongo:mongo
      - grafana:grafana
      - api-gateway:api-gateway

networks:
  net:
    driver: overlay

volumes:
  grafana:
    driver: local